library(dada2)
library(ggplot2)
library(beepr)
# For the 12S samples:
# Set the file paths for the raw fastqs
path_raw12F <- "G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/Raw/12S/Read1"
path_raw12R <- "G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/Raw/12S/Read2"
# Specify file name formats
fns12F <- list.files(path_raw12F)
fastqs12F <- fns12F[grepl('.gz$', fns12F)]
fns12R <- list.files(path_raw12R)
fastqs12R <- fns12R[grepl('.gz$', fns12R)]
###  print(fastqs12F)
# For the BF2 samples:
# Set the file paths for the raw fastqs
path_rawBF <- "G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/Raw/BF2BR2/Read1"
path_rawBR <- "G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/Raw/BF2BR2/Read2"
# Specify file name formats
fnsBF <- list.files(path_rawBF)
fastqsBF <- fnsBF[grepl('.gz$', fnsBF)]
fnsBR <- list.files(path_rawBR)
fastqsBR <- fnsBR[grepl('.gz$', fnsBR)]
# The file paths still include the desktop.ini file, so let's specify a file path to lead future code only to the fastq files in the folder
fns12Fisolate <- file.path(path_raw12F, fastqs12F)
fns12Risolate <- file.path(path_raw12R, fastqs12R)
fnsBFisolate <- file.path(path_rawBF, fastqsBF)
fnsBRisolate <- file.path(path_rawBR, fastqsBR)
# Set sample names to a vector
# Remove path and the .gz extension
names12Ffast <- tools::file_path_sans_ext(basename(fastqs12F))
# Repeat file_path_sans_ext to also remove the .fastq
names12F <- tools::file_path_sans_ext(names12Ffast)
names12Rfast <- tools::file_path_sans_ext(basename(fastqs12R))
names12R <- tools::file_path_sans_ext(names12Rfast)
namesBFfast <- tools::file_path_sans_ext(basename(fastqsBF))
namesBF <- tools::file_path_sans_ext(namesBFfast)
namesBRfast <- tools::file_path_sans_ext(basename(fastqsBR))
# Repeat file_path_sans_ext to also remove the .fastq
namesBR <- tools::file_path_sans_ext(namesBRfast)
# Set location to put output images and graphs
path_outputs <- "G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs"
# Numbers for 12S Forward reads:
sample(2:15, 4, replace = FALSE)
# Results on 2/29/2024: 6, 8, 2, 5
# Numbers for 12S Reverse reads:
sample(2:15, 4, replace = FALSE)
# Results on 2/29/2024: 7, 4, 8, 13
# Numbers for BF2 Forward reads:
sample(2:15, 4, replace = FALSE)
# Results on 2/29/2024: 6, 15, 3, 4
# Numbers for BF2 Reverse reads:
sample(2:15, 4, replace = FALSE)
# Results on 2/29/2024: 9, 14, 12, 6
# Numbers for 12S Forward reads:
sample(1:78, 4, replace = FALSE)
# Results on 3/5/2023: 14, 15,
# Numbers for 12S Reverse reads:
sample(1:78, 4, replace = FALSE)
# Results on 2/29/2024: 7, 4, 8, 13
# Numbers for BF2 Forward reads:
sample(1:78, 4, replace = FALSE)
# Results on 2/29/2024: 6, 15, 3, 4
# Numbers for BF2 Reverse reads:
sample(1:78, 4, replace = FALSE)
# Results on 2/29/2024: 9, 14, 12, 6
# Figured out that the desktop.ini file was the problem, ran an aggregate plot just for funsies
#plotQualityProfile(fns12Fisolate, aggregate = T)
# Now run the individual ones chosen by the RNG
# 12S Forward:
plotQualityProfile(fns12Fisolate[41])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/12ForwardQuality_RNG41.png", plot = plotQualityProfile(fns12Fisolate[41]))
plotQualityProfile(fns12Fisolate[49])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/12ForwardQuality_RNG49.png", plot = plotQualityProfile(fns12Fisolate[49]))
plotQualityProfile(fns12Fisolate[18])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/12ForwardQuality_RNG18.png", plot = plotQualityProfile(fns12Fisolate[18]))
plotQualityProfile(fns12Fisolate[60])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/12ForwardQuality_RNG60.png", plot = plotQualityProfile(fns12Fisolate[60]))
# 12S Reverse:
plotQualityProfile(fns12Risolate[31])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/12ReverseQuality_RNG31.png", plot = plotQualityProfile(fns12Risolate[31]))
plotQualityProfile(fns12Risolate[3])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/12ReverseQuality_RNG3.png", plot = plotQualityProfile(fns12Risolate[3]))
plotQualityProfile(fns12Risolate[22])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/12ReverseQuality_RNG22.png", plot = plotQualityProfile(fns12Risolate[22]))
plotQualityProfile(fns12Risolate[55])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/12ReverseQuality_RNG55.png", plot = plotQualityProfile(fns12Risolate[55]))
# B Forward:
plotQualityProfile(fnsBFisolate[70])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/BF2ForwardQuality_RNG70.png", plot = plotQualityProfile(fnsBFisolate[70]))
plotQualityProfile(fnsBFisolate[28])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/BF2ForwardQuality_RNG28.png", plot = plotQualityProfile(fnsBFisolate[28]))
plotQualityProfile(fnsBFisolate[62])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/BF2ForwardQuality_RNG62.png", plot = plotQualityProfile(fnsBFisolate[62]))
plotQualityProfile(fnsBFisolate[5])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/BF2ForwardQuality_RNG5.png", plot = plotQualityProfile(fnsBFisolate[5]))
# B Reverse:
plotQualityProfile(fnsBRisolate[10])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/BF2ReverseQuality_RNG10.png", plot = plotQualityProfile(fnsBRisolate[10]))
plotQualityProfile(fnsBRisolate[63])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/BF2ReverseQuality_RNG63.png", plot = plotQualityProfile(fnsBRisolate[63]))
plotQualityProfile(fnsBRisolate[49])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/BF2ReverseQuality_RNG49.png", plot = plotQualityProfile(fnsBRisolate[49]))
plotQualityProfile(fnsBRisolate[48])
ggsave("G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/BF2ReverseQuality_RNG48.png", plot = plotQualityProfile(fnsBRisolate[48]))
beep(sound = "fanfare")
plotQualityProfile(fns12Fisolate, aggregate = T)
fns12Fisolate
plotQualityProfile(fns12Fisolate, aggregate = T)
library(dada2)
library(ggplot2)
library(beepr)
# For the 12S samples:
# Set the file paths for the raw fastqs
path_raw12F <- "G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/Raw/12S/Read1"
path_raw12R <- "G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/Raw/12S/Read2"
# Specify file name formats
fns12F <- list.files(path_raw12F)
fastqs12F <- fns12F[grepl('.gz$', fns12F)]
fns12R <- list.files(path_raw12R)
fastqs12R <- fns12R[grepl('.gz$', fns12R)]
###  print(fastqs12F)
# For the BF2 samples:
# Set the file paths for the raw fastqs
path_rawBF <- "G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/Raw/BF2BR2/Read1"
path_rawBR <- "G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/Raw/BF2BR2/Read2"
# Specify file name formats
fnsBF <- list.files(path_rawBF)
fastqsBF <- fnsBF[grepl('.gz$', fnsBF)]
fnsBR <- list.files(path_rawBR)
fastqsBR <- fnsBR[grepl('.gz$', fnsBR)]
# The file paths still include the desktop.ini file, so let's specify a file path to lead future code only to the fastq files in the folder
fns12Fisolate <- file.path(path_raw12F, fastqs12F)
fns12Risolate <- file.path(path_raw12R, fastqs12R)
fnsBFisolate <- file.path(path_rawBF, fastqsBF)
fnsBRisolate <- file.path(path_rawBR, fastqsBR)
# Set sample names to a vector
# Remove path and the .gz extension
names12Ffast <- tools::file_path_sans_ext(basename(fastqs12F))
# Repeat file_path_sans_ext to also remove the .fastq
names12F <- tools::file_path_sans_ext(names12Ffast)
names12Rfast <- tools::file_path_sans_ext(basename(fastqs12R))
names12R <- tools::file_path_sans_ext(names12Rfast)
namesBFfast <- tools::file_path_sans_ext(basename(fastqsBF))
namesBF <- tools::file_path_sans_ext(namesBFfast)
namesBRfast <- tools::file_path_sans_ext(basename(fastqsBR))
# Repeat file_path_sans_ext to also remove the .fastq
namesBR <- tools::file_path_sans_ext(namesBRfast)
# Set location to put output images and graphs
path_outputs <- "G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs"
plotQualityProfile(fns12Fisolate, aggregate = T)
fns12Fisolate
fns12F
plotQualityProfile(fns12Risolate, aggregate = T)
gc()
memory.limit()
plotQualityProfile(fnsBRisolate, aggregate = T)
ls(fns12Fisolate)
list(fns12Fisolate)
list(fns12F)
plotQualityProfile(fns12Fisolate[1:10], aggregate = T)
