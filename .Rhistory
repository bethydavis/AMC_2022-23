psCOI <- psCOI %>%
subset_taxa(Class != "Chrysophyceae")
psCOI <- psCOI %>%
subset_taxa(Class != "Raphidophyceae")
psCOI <- prune_taxa(taxa_sums(psCOI) > 0, psCOI)
psCOI <- prune_samples(sample_sums(psCOI) > 0, psCOI)
psCOI.stack <- transform_sample_counts(psCOI, function(x) x / sum(x) )
# Plot based on Class
plot_bar(psCOI.stack, fill="Class") + ggtitle("Proportion of Cleaned Reads by Class.png")
# Plot based on Class
plot_bar(psCOI.stack, fill="Family") + ggtitle("Proportion of Cleaned Reads by Class.png")
library(phylosmith)
stupid <- melt_phyloseq(psCOI)
unique(stupid$Order)
unique(stupid$Family)
# Plot based on Class
plot_bar(psCOI.stack, fill="Class") + ggtitle("Proportion of Cleaned Reads by Class.png")
psCOI
ggsave("CleanedClassIDs.png", path = path_outputs, plot_bar(psCOI.stack, fill="Class") + ggtitle("Proportion of Cleaned Reads by Class.png") + ggtitle("COI Identified Clean Reads"), width = 8, height = 5, units = "in")
saveRDS(psCOI, "G:/My Drive/2_UMaine FSM - Field Projects/AMC/Data/dataoutputs/COIB/5-May03-2024/CleanPhyloseq.RDS")
library(phylosmith)
source("AMCJoint_config.R")
psCOI <- psCOI %>%
subset_taxa(Species != "Homo sapiens")
psCOI <- prune_taxa(taxa_sums(psCOI) > 0, psCOI)
psCOI <- prune_samples(sample_sums(psCOI) > 0, psCOI)
ps12 <- ps12 %>%
subset_taxa(Species != "Homo sapiens")
ps12 <- prune_taxa(taxa_sums(ps12) > 0, ps12)
ps12 <- prune_samples(sample_sums(ps12) > 0, ps12)
psCOI
ps12
rc <-as.data.frame(otu_table(ps12))
test <- rarecurve(rc, step = 10, cex=0.5, label = FALSE)
raremax <- max(rowSums(otu_table(ps12))) # Max SV number is 74165
raremin <- min(rowSums(otu_table(ps12))) # Min SV number is 7
rowSums(otu_table(ps12))
rc <-as.data.frame(otu_table(psCOI))
test <- rarecurve(rc, step = 10, cex=0.5, label = FALSE)
raremaxC <- max(rowSums(otu_table(psCOI))) # Max SV number is 35078
rareminC <- min(rowSums(otu_table(psCOI))) # Min SV number is 0
rowSums(otu_table(psCOI))
# Since we trimmed non-LWA sites out of the object (in config), get an updated snapshot of the phyloseq dimensions
ps12
psCOI
raremin
raremax
rareminC
raremaxC
rowSums(otu_table(ps12))
rc12 <-as.data.frame(otu_table(ps12))
test12 <- rarecurve(rc12, step = 10, cex=0.5, label = FALSE)
rowSums(otu_table(ps12))
sam_data(ps12)
rcC <-as.data.frame(otu_table(psCOI))
testC <- rarecurve(rcC, step = 10, cex=0.5, label = FALSE)
SVsum_COI <- sample_sums(psCOI)
write.table(SVsum_COI, file.path(path_outputs, "AMCSVsum_COI.txt"))
SVsum_12 <- sample_sums(ps12)
write.table(SVsum_12, file.path(path_outputs, "AMCSVsum_12.txt"))
# 12S total unique counts
length(unique(melt12un$Species))
length(unique(melt12un$Family))
length(unique(melt12un$OTU))
# 26 unique species, 19 unique families, 113 unique OTUs
AMCSpec_12 <- unique(melt12un$Species)
write.table(AMCSpec_12, file.path(path_outputs, "AMCSpec_12Total.txt"))
# COI total unique counts
length(unique(meltCOIun$Species))
length(unique(meltCOIun$Family))
length(unique(meltCOIun$OTU))
# 74 unique species detected, with 129 unique OTUs, across 43 unique families
AMCSpec_COI <- unique(meltCOIun$Species)
write.table(AMCSpec_COI, file.path(path_outputs, "AMCSpec_COITotal.txt"))
# Graph
ggsave("AMC12S_Gamma.png", path = path_outputs, plot_bar(ps12.fam, fill="Family") + facet_grid(~Year, scales= "free_x", space = "free_x") + theme_bw() + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + labs(x = "Site", y = "Number of SVs", title = "12S Overall Diversity")  + scale_colour_brewer(palette = "Set1") + theme(legend.position = "bottom"), width = 8, height = 7, units = "in")
ggsave("AMCCOI_Gamma.png", path = path_outputs, plot_bar(psCOI.fam, fill="Family") + facet_grid(~Year, scales= "free_x", space = "free_x") + theme_bw() + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + labs(x = "Site", y = "Number of SVs", title = "COI Overall Diversity")  + scale_colour_brewer(palette = "Set1") + theme(legend.position = "bottom"), width = 8, height = 10, units = "in")
View(meltCOI)
View(melt12)
path_outputs
# Look specifically at 2022 vs 2023
# 12S 2022 unique counts
length(unique(melt12un$Species[melt12un$Year == "2022"]))
length(unique(melt12un$Family[melt12un$Year == "2022"]))
length(unique(melt12un$OTU[melt12un$Year == "2022"]))
# 20 unique species detected, with 54 unique OTUs, across 15 unique families
AMCSpec_12_2022 <- unique(melt12un$Species[melt12un$Year == "2022"])
write.table(AMCSpec_12_2022, file.path(path_outputs, "AMCSpec_12_2022.txt"))
# 12S 2023 unique counts
length(unique(melt12un$Species[melt12un$Year == "2023"]))
length(unique(melt12un$Family[melt12un$Year == "2023"]))
length(unique(melt12un$OTU[melt12un$Year == "2023"]))
# 21 unique species detected, with 84 unique OTUs, across 15 unique families
AMCSpec_12_2023 <- unique(melt12un$Species[melt12un$Year == "2023"])
write.table(AMCSpec_12_2023, file.path(path_outputs, "AMCSpec_12_2023.txt"))
AMC12_Yeardif <- setdiff(AMCSpec_12_2022, AMCSpec_12_2023)
write.table(AMC12_Yeardif, file.path(path_outputs, "AMC12_Yeardif.txt"))
# 4 species detected in 2022 were not detected in 2023
AMC12_Yeardifrev <- setdiff(AMCSpec_12_2023,AMCSpec_12_2022)
write.table(AMC12_Yeardif, file.path(path_outputs, "AMC12_Yeardifrev.txt"))
# 6 species detected in 2023 were not detected in 2022
# COI 2022 unique counts
length(unique(meltCOIun$Species[meltCOIun$Year == "2022"]))
length(unique(meltCOIun$Family[meltCOIun$Year == "2022"]))
length(unique(meltCOIun$OTU[meltCOIun$Year == "2022"]))
# 33 unique species detected, with 44 unique OTUs, across 22 unique families
AMCSpec_COI_2022 <- unique(meltCOIun$Species[meltCOIun$Year == "2022"])
write.table(AMCSpec_COI_2022, file.path(path_outputs, "AMCSpec_COI_2022.txt"))
# COI 2023 unique counts
length(unique(meltCOIun$Species[meltCOIun$Year == "2023"]))
length(unique(meltCOIun$Family[meltCOIun$Year == "2023"]))
length(unique(meltCOIun$OTU[meltCOIun$Year == "2023"]))
# 65 unique species detected, with 109 unique OTUs, across 37 unique families
AMCSpec_COI_2023 <- unique(meltCOIun$Species[meltCOIun$Year == "2023"])
write.table(AMCSpec_COI_2023, file.path(path_outputs, "AMCSpec_COI_2023.txt"))
AMCCOI_Yeardif <- setdiff(AMCSpec_COI_2022, AMCSpec_COI_2023)
write.table(AMCCOI_Yeardif, file.path(path_outputs, "AMCCOI_Yeardif.txt"))
# 9 species detected in 2022 were not detected in 2023
AMCCOI_Yeardifrev <- setdiff(AMCSpec_COI_2023,AMCSpec_COI_2022)
write.table(AMCCOI_Yeardif, file.path(path_outputs, "AMCCOI_Yeardifrev.txt"))
# 41 species detected in 2023 were not detected in 2022
AMC12_Yeardif
AMC12_Yeardifrev
AMCCOI_Yeardif
AMCCOI_Yeardifrev
View(meltCOI)
psCOI <- psCOI %>%
subset_taxa(Species != "Homo sapiens")
psCOI <- prune_taxa(taxa_sums(psCOI) > 0, psCOI)
psCOI <- prune_samples(sample_sums(psCOI) > 0, psCOI)
ps12 <- ps12 %>%
subset_taxa(Species != "Homo sapiens")
ps12 <- prune_taxa(taxa_sums(ps12) > 0, ps12)
ps12 <- prune_samples(sample_sums(ps12) > 0, ps12)
ps12.stack <- transform_sample_counts(ps12, function(x) x / sum(x) )
# Use the following for cleaner plots - pay attention to taxonomic rank
psCOI.class = tax_glom(psCOI, taxrank="Class", NArm=FALSE)
ps12.class = tax_glom(ps12, taxrank="Class", NArm=FALSE)
psCOI.fam = tax_glom(psCOI, taxrank="Family", NArm=FALSE)
ps12.fam = tax_glom(ps12, taxrank="Family", NArm=FALSE)
psCOI.sp = tax_glom(psCOI, taxrank="Species", NArm=FALSE)
ps12.sp = tax_glom(ps12, taxrank="Species", NArm=FALSE)
meltCOI <- melt_phyloseq(psCOI)
melt12 <- melt_phyloseq(ps12)
meltCOIun <- subset(meltCOI, Abundance > "0")
melt12un <- subset(melt12, Abundance > "0")
# Stacked Bar Function for Cleaned Phyloseq
psCOI.stack <- transform_sample_counts(psCOI, function(x) x / sum(x) )
rc12 <-as.data.frame(otu_table(ps12))
test12 <- rarecurve(rc12, step = 10, cex=0.5, label = FALSE)
raremax <- max(rowSums(otu_table(ps12))) # Max SV number is 74165
raremin <- min(rowSums(otu_table(ps12))) # Min SV number is 7
rowSums(otu_table(ps12))
rcC <-as.data.frame(otu_table(psCOI))
testC <- rarecurve(rcC, step = 10, cex=0.5, label = FALSE)
raremaxC <- max(rowSums(otu_table(psCOI))) # Max SV number is 5307
rareminC <- min(rowSums(otu_table(psCOI))) # Min SV number is 0
rowSums(otu_table(psCOI))
# Since we trimmed non-LWA sites out of the object (in config), get an updated snapshot of the phyloseq dimensions
ps12
psCOI
raremax
raremin
raremaxC
rareminC
SVsum_COI <- sample_sums(psCOI)
write.table(SVsum_COI, file.path(path_outputs, "AMCSVsum_COI.txt"))
SVsum_12 <- sample_sums(ps12)
write.table(SVsum_12, file.path(path_outputs, "AMCSVsum_12.txt"))
# 12S total unique counts
length(unique(melt12un$Species))
length(unique(melt12un$Family))
length(unique(melt12un$OTU))
# 27 unique species, 19 unique families, 116 unique OTUs
AMCSpec_12 <- unique(melt12un$Species)
write.table(AMCSpec_12, file.path(path_outputs, "AMCSpec_12Total.txt"))
# COI total unique counts
length(unique(meltCOIun$Species))
length(unique(meltCOIun$Family))
length(unique(meltCOIun$OTU))
# 73 unique species detected, with 125 unique OTUs, across 42 unique families
AMCSpec_COI <- unique(meltCOIun$Species)
write.table(AMCSpec_COI, file.path(path_outputs, "AMCSpec_COITotal.txt"))
# Graph
ggsave("AMC12S_Gamma.png", path = path_outputs, plot_bar(ps12.fam, fill="Family") + facet_grid(~Year, scales= "free_x", space = "free_x") + theme_bw() + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + labs(x = "Site", y = "Number of SVs", title = "12S Overall Diversity")  + scale_colour_brewer(palette = "Set1") + theme(legend.position = "bottom"), width = 8, height = 7, units = "in")
ggsave("AMCCOI_Gamma.png", path = path_outputs, plot_bar(psCOI.fam, fill="Family") + facet_grid(~Year, scales= "free_x", space = "free_x") + theme_bw() + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + labs(x = "Site", y = "Number of SVs", title = "COI Overall Diversity")  + scale_colour_brewer(palette = "Set1") + theme(legend.position = "bottom"), width = 8, height = 10, units = "in")
# Look specifically at 2022 vs 2023
# 12S 2022 unique counts
length(unique(melt12un$Species[melt12un$Year == "2022"]))
length(unique(melt12un$Family[melt12un$Year == "2022"]))
length(unique(melt12un$OTU[melt12un$Year == "2022"]))
# 21 unique species detected, with 56 unique OTUs, across 15 unique families
AMCSpec_12_2022 <- unique(melt12un$Species[melt12un$Year == "2022"])
write.table(AMCSpec_12_2022, file.path(path_outputs, "AMCSpec_12_2022.txt"))
# 12S 2023 unique counts
length(unique(melt12un$Species[melt12un$Year == "2023"]))
length(unique(melt12un$Family[melt12un$Year == "2023"]))
length(unique(melt12un$OTU[melt12un$Year == "2023"]))
# 22 unique species detected, with 87 unique OTUs, across 15 unique families
AMCSpec_12_2023 <- unique(melt12un$Species[melt12un$Year == "2023"])
write.table(AMCSpec_12_2023, file.path(path_outputs, "AMCSpec_12_2023.txt"))
AMC12_Yeardif <- setdiff(AMCSpec_12_2022, AMCSpec_12_2023)
write.table(AMC12_Yeardif, file.path(path_outputs, "AMC12_Yeardif.txt"))
# 5 species detected in 2022 were not detected in 2023
AMC12_Yeardifrev <- setdiff(AMCSpec_12_2023,AMCSpec_12_2022)
write.table(AMC12_Yeardif, file.path(path_outputs, "AMC12_Yeardifrev.txt"))
# 6 species detected in 2023 were not detected in 2022
# COI 2022 unique counts
length(unique(meltCOIun$Species[meltCOIun$Year == "2022"]))
length(unique(meltCOIun$Family[meltCOIun$Year == "2022"]))
length(unique(meltCOIun$OTU[meltCOIun$Year == "2022"]))
# 33 unique species detected, with 44 unique OTUs, across 22 unique families
AMCSpec_COI_2022 <- unique(meltCOIun$Species[meltCOIun$Year == "2022"])
write.table(AMCSpec_COI_2022, file.path(path_outputs, "AMCSpec_COI_2022.txt"))
# COI 2023 unique counts
length(unique(meltCOIun$Species[meltCOIun$Year == "2023"]))
length(unique(meltCOIun$Family[meltCOIun$Year == "2023"]))
length(unique(meltCOIun$OTU[meltCOIun$Year == "2023"]))
# 64 unique species detected, with 105 unique OTUs, across 36 unique families
AMCSpec_COI_2023 <- unique(meltCOIun$Species[meltCOIun$Year == "2023"])
write.table(AMCSpec_COI_2023, file.path(path_outputs, "AMCSpec_COI_2023.txt"))
AMCCOI_Yeardif <- setdiff(AMCSpec_COI_2022, AMCSpec_COI_2023)
write.table(AMCCOI_Yeardif, file.path(path_outputs, "AMCCOI_Yeardif.txt"))
# 9 species detected in 2022 were not detected in 2023
AMCCOI_Yeardifrev <- setdiff(AMCSpec_COI_2023,AMCSpec_COI_2022)
write.table(AMCCOI_Yeardif, file.path(path_outputs, "AMCCOI_Yeardifrev.txt"))
# 41 species detected in 2023 were not detected in 2022
# 5 species detected in 2022 were not detected in 2023
AMC12_Yeardif
AMC12_Yeardifrev
# 9 species detected in 2022 were not detected in 2023
AMCCOI_Yeardif
# 9 species detected in 2022 were not detected in 2023
AMCCOI_Yeardifrev
richCOI <-  estimate_richness(psCOI, measures=c("Chao1", "Shannon", "Simpson"))
write.table(richCOI, file.path(path_outputs, "AMCCOI_AlphaDiversity.txt"))
rich12 <-  estimate_richness(ps12, measures=c("Chao1", "Shannon", "Simpson"))
write.table(rich12, file.path(path_outputs, "AMC12_AlphaDiversity.txt"))
# Plot alpha diversity metrics
richCOIp <- plot_richness(psCOI, color = "TreatType", measures = c("Chao1", "Shannon", "Simpson")) + geom_point(size=2, alpha=0.7) + scale_colour_brewer(palette = "Set1") + theme_bw() + labs(x = "Sample", title = "COI  Alpha Diversity Measures") + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + theme(axis.title.y = element_blank(), axis.title.x = element_blank(), axis.text.x = element_blank())  + theme(legend.position = "bottom")
rich12p <- plot_richness(ps12, color = "TreatType", measures = c("Chao1", "Shannon", "Simpson")) + geom_point(size=2, alpha=0.7) + scale_colour_brewer(palette = "Set1") + theme_bw()  + labs(x = "Sample", title = "12S Alpha Diversity Measures") + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_blank()) + theme(legend.position = "bottom")
ggsave("AMCCOI_AlphaDiversity.png", path = path_outputs, plot = richCOIp, width = 10, height = 5, units = "in")
ggsave("AMC12S_AlphaDiversity.png", path = path_outputs, plot = rich12p, width = 10, height = 5, units = "in")
psCOI_norm <- transform_sample_counts(psCOI, function(x) x / sum(x) )
ps12_norm <- transform_sample_counts(ps12, function(x) x / sum(x) )
JacCOIP <- ordinate(psCOI_mod, method ="PCoA", "jaccard", binary = TRUE)
JacCOIP <- ordinate(psCOI_norm, method ="PCoA", "jaccard", binary = TRUE)
JacPC <- plot_ordination(psCOI_norm, JacCOIP, type="samples", color="LWAPosition")
JacPC + stat_ellipse(geom = "polygon", type = "norm", alpha = 0.4, level = 0.5, aes(fill = TreatType)) + labs(title = "Jaccard PCOA for AMC COI Data")
JacCOIP <- ordinate(psCOI_norm, method ="PCoA", "jaccard", binary = TRUE)
JacPC <- plot_ordination(psCOI_norm, JacCOIP, type="samples", color="TreatType")
JacPC + stat_ellipse(geom = "polygon", type = "norm", alpha = 0.4, level = 0.5, aes(fill = TreatType)) + labs(title = "Jaccard PCOA for AMC COI Data")
pcoa_phyloseq(JacCOIP, "TreatType", method = 'jaccard',
circle = 0.50, colors = 'default', labels = NULL)
pcoa_phyloseq(psCOI, "TreatType", method = 'jaccard', circle = 0.50, colors = 'default', labels = NULL)
JacCOIP <- ordinate(psCOI_norm, method ="PCoA", "jaccard", binary = TRUE)
JacPC <- plot_ordination(psCOI_norm, JacCOIP, type="samples", color="TreatType")
JacPC + stat_ellipse(geom = "polygon", type = "norm", alpha = 0.4, level = 0.5, aes(fill = TreatType)) + labs(title = "Jaccard PCOA for AMC COI Data")
# COI
# set up PCOA
JacCOIP <- ordinate(psCOI_norm, method ="PCoA", "jaccard", binary = TRUE)
JacPCType  <- plot_ordination(psCOI_norm, JacCOIP, type="samples", color="TreatType")
JacPCPos  <- plot_ordination(psCOI_norm, JacCOIP, type="samples", color="LWAPosition")
## Plot based on TreatType
ggsave("AMCCOI_JaccPCOA_Type.png", path = path_outputs, JacPCType + stat_ellipse(geom = "polygon", type = "norm", alpha = 0.4, level = 0.5, aes(fill = TreatType)) + labs(title = "Jaccard PCOA for AMC COI Data - LWA Type"), width = 6, height = 4, units = "in")
## Plot based on Position
ggsave("AMCCOI_JaccPCOA_position.png", path = path_outputs, JacPCPos + stat_ellipse(geom = "polygon", type = "norm", alpha = 0.4, level = 0.5, aes(fill = LWAPosition)) + labs(title = "Jaccard PCOA for AMC COI Data - LWA Position"), width = 6, height = 4, units = "in")
# 12S PCoA prep
Jac12P <- ordinate(ps12_norm, method ="PCoA", "jaccard", binary = TRUE)
JacP12Type <- plot_ordination(ps12_norm, Jac12P, type = "samples", color="TreatType")
JacP12Pos <- plot_ordination(ps12_norm, Jac12P, type = "samples", color="LWAPosition")
# Plot based on TreatType
ggsave("AMC12_JaccPCOA_Type.png", path = path_outputs, JacP12Type + stat_ellipse(geom = "polygon", type = "norm", alpha = 0.4, level = 0.5, aes(fill = LWAPosition)) + labs(title = "Jaccard PCOA for AMC 12S Data - LWA Type"), width = 6, height = 4, units = "in")
## Plot based on Position
ggsave("AMC12_JaccPCOA_position.png", path = path_outputs, JacP12Pos + stat_ellipse(geom = "polygon", type = "norm", alpha = 0.4, level = 0.5, aes(fill = LWAPosition)) + labs(title = "Jaccard PCOA for AMC 12S Data - LWA Position"), width = 6, height = 4, units = "in")
# Plot based on TreatType
ggsave("AMC12_JaccPCOA_Type.png", path = path_outputs, JacP12Type + stat_ellipse(geom = "polygon", type = "norm", alpha = 0.4, level = 0.5, aes(fill = TreatType)) + labs(title = "Jaccard PCOA for AMC 12S Data - LWA Type"), width = 6, height = 4, units = "in")
# Set up information for adonis PERMANOVA
JacDistCOI <- distance(psCOI_mod, "jaccard", binary = TRUE)
# Set up information for adonis PERMANOVA
JacDistCOI <- distance(psCOI_norm, "jaccard", binary = TRUE)
xCOI <- data.frame(sample_data(psCOI_norm))
JacDist12 <- distance(ps12_norm, "jaccard", binary = TRUE)
x12 <- data.frame(sample_data(ps12_norm))
# Significance tests of interest:
## Is TreatType significant for both primers? Is Year significant for both primers? Is LWAPosition or Refiltration significant? Does the combination of TreatType and Year or TreatType and Position give more significance than a solo factor?
# COI
# TreatType alone
adonis2(JacDistCOI ~ xCOI$TreatType) # p-value = 0.012 **
adonis2(JacDistCOI ~ xCOI$Year) # p-value = 0.01 *
adonis2(JacDistCOI ~ xCOI$LWAPosition) # p-value = 0.037 *
adonis2(JacDistCOI ~ xCOI$Refiltration) # p-vlue = 0.008 * - however the Refiltration and Year info is nearly identical
adonis2(JacDistCOI ~ TreatType*LWAPosition, data = xCOI) # p-value is 0.940 for the combination, significance for TreatType (0.005) but not for LWAPosition for this run (0.223)
adonis2(JacDistCOI ~ TreatType*Year, data = xCOI) # p-value is 0.007 for the combination. Shows significance (0.004) for treat type but no significance for this running of Year (0.08)
# Each test runs 999 permutations, so small variance each time, but TreatType is consistently the most significant factor, followed by year and then loosely by LWAPosition
# 12S
adonis2(JacDist12 ~ x12$TreatType) # 0.006 **
adonis2(JacDist12 ~ x12$Year) # 0.004 **
adonis2(JacDist12 ~ x12$LWAPosition) # 0.003 **
adonis2(JacDist12 ~ x12$Refiltration) # 0.005 **
adonis2(JacDist12 ~ TreatType*LWAPosition, data = x12) # 0.739 for the combination, individual factors still ** significant
adonis2(JacDist12 ~ TreatType*Year, data = x12) # 0.008 for the combination, individual factors also still significant
# config file with paths and versioning
source("AMCCOI_config.R")
# File with previous outputs to make reloading easier
source("AMCCOI_reload.R")
View(dadaBR)
rowSums(seqtabB.nochim)
# Config file with paths and versioning
source("AMC12S_config.R")
# Reload file with paths to previous outputs
source("AMC12S_reload.R")
# Set function
getN <- function(x) sum(getUniques(x))
# Combine read numbers
track12 <- cbind(sapply(dada12F, getN), sapply(dada12R, getN), sapply(mergers12, getN), rowSums(seqtab12.nochim))
mergers12 <- mergePairs(dada12F, path_filt12F, dada12R, path_filt12R, verbose=TRUE)
# Set function
getN <- function(x) sum(getUniques(x))
# Combine read numbers
track12 <- cbind(filtout12sync, sapply(dada12F, getN), sapply(dada12R, getN), sapply(mergers12, getN), rowSums(seqtab12.nochim))
# Combine read numbers
track12 <- cbind(sapply(dada12F, getN), sapply(dada12R, getN), sapply(mergers12, getN), rowSums(seqtab12.nochim))
# Set column names
colnames(track12) <- c("denoisedF", "denoisedR", "merged", "nonchim")
# Save the results of the workflow verification
write.csv(track12, file.path(path_outputs, "12S_WorkflowVerification.csv"))
filtout12sync
write.csv(filtout12sync, file.path(path_outputs, "12SFiltresults.csv"))
# Config file with paths and versioning
source("AMC12S_config.R")
# Reload file with paths to previous outputs
source("AMC12S_reload.R")
filttrend12sync <- ggplot(as.data.frame(filtout12sync)) + geom_point(aes(row.names(filtout12sync), reads.in), color = "blue") + geom_point(aes(row.names(filtout12sync), reads.out), color = "orange") + ggtitle("Filter Trends for AMC 12 Synced Forward Reads")
# View plot
filttrend12sync
# Make plot
filttrend12sync <- ggplot(as.data.frame(filtout12sync)) + geom_point(aes(row.names(filtout12sync), reads.in), color = "blue") + geom_point(aes(row.names(filtout12sync), reads.out), color = "orange") + ggtitle("Filter Trends for AMC 12 Synced Forward Reads") +  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))
# View plot
filttrend12sync
View(filtout12sync)
filttrend12sync <- ggplot(as.data.frame(filtout12sync)) + geom_point(aes(row.names(filtout12sync), reads.in), color = "blue") + geom_point(aes(row.names(filtout12sync), reads.out), color = "orange") + ggtitle("Filter Trends for AMC 12 Synced Forward Reads") + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
# View plot
filttrend12sync
# Make plot
filttrend12sync <- ggplot(as.data.frame(filtout12sync)) + geom_point(aes(row.names(filtout12sync), reads.in), color = "blue") + geom_point(aes(row.names(filtout12sync), reads.out), color = "orange") + ggtitle("Filter Trends for AMC 12 Synced Forward Reads") + theme(axis.text.x = element_text(angle = 45))
# View plot
filttrend12sync
# Make plot
filttrend12sync <- ggplot(as.data.frame(filtout12sync)) + geom_point(aes(row.names(filtout12sync), reads.in), color = "blue") + geom_point(aes(row.names(filtout12sync), reads.out), color = "orange") + ggtitle("Filter Trends for AMC 12 Synced Forward Reads") + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1,size = 10))
# View plot
filttrend12sync
# Make plot
filttrend12sync <- ggplot(as.data.frame(filtout12sync)) + geom_point(aes(row.names(filtout12sync), reads.in), color = "blue") + geom_point(aes(row.names(filtout12sync), reads.out), color = "orange") + ggtitle("Filter Trends for AMC 12 Synced Forward Reads") + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1,size = 10))
# View plot
filttrend12sync
# Make plot
filttrend12sync <- ggplot(as.data.frame(filtout12sync)) + geom_point(aes(row.names(filtout12sync), reads.in), color = "blue") + geom_point(aes(row.names(filtout12sync), reads.out), color = "orange") + ggtitle("Filter Trends for AMC 12 Synced Forward Reads") + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + scale_x_discrete(labels = label_wrap(10))
# Make plot
filttrend12sync <- ggplot(as.data.frame(filtout12sync)) + geom_point(aes(row.names(filtout12sync), reads.in), color = "blue") + geom_point(aes(row.names(filtout12sync), reads.out), color = "orange") + ggtitle("Filter Trends for AMC 12 Synced Forward Reads") + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1, size = 20)))
# Make plot
filttrend12sync <- ggplot(as.data.frame(filtout12sync)) + geom_point(aes(row.names(filtout12sync), reads.in), color = "blue") + geom_point(aes(row.names(filtout12sync), reads.out), color = "orange") + ggtitle("Filter Trends for AMC 12 Synced Forward Reads") + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1, size = 20))
# View plot
filttrend12sync
# Make plot
filttrend12sync <- ggplot(as.data.frame(filtout12sync)) + geom_point(aes(row.names(filtout12sync), reads.in), color = "blue") + geom_point(aes(row.names(filtout12sync), reads.out), color = "orange") + ggtitle("Filter Trends for AMC 12 Synced Forward Reads") + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1, size = 10))
# View plot
filttrend12sync
# Make plot
filttrend12sync <- ggplot(as.data.frame(filtout12sync)) + geom_point(aes(row.names(filtout12sync), reads.in), color = "blue") + geom_point(aes(row.names(filtout12sync), reads.out), color = "orange") + ggtitle("Filter Trends for AMC 12 Synced Forward Reads") + theme(axis.text.x = "none")
# View plot
filttrend12sync
# Make plot
filttrend12sync <- ggplot(as.data.frame(filtout12sync)) + geom_point(aes(row.names(filtout12sync), reads.in), color = "blue") + geom_point(aes(row.names(filtout12sync), reads.out), color = "orange") + ggtitle("Filter Trends for AMC 12 Synced Forward Reads") + theme(axis.text.x = element_blank()) + labs(x = "Sample")
# View plot
filttrend12sync
path_outputs <- "C:/Users/bydav/Desktop/ThesisFigs/AMC"
path_outputs
# Save
ggsave("FilterTrends_12Sync.png", plot = filttrend12sync, path = path_outputs, width = 6, height = 4, units = "in")
# config file with paths and versioning
source("AMCCOI_config.R")
# File with previous outputs to make reloading easier
source("AMCCOI_reload.R")
filttrendB <- ggplot(as.data.frame(filtoutB)) + geom_point(aes(row.names(filtoutB), reads.in), color = "blue") + geom_point(aes(row.names(filtoutB), reads.out), color = "orange") + ggtitle("Filter Trends for AMC BF2/BR2 Reads") + theme(axis.text.x = element_blank()) + labs(x = "Sample")
# View plot
filttrendB
path_outputs <- "C:/Users/bydav/Desktop/ThesisFigs/AMC"
# Save plot
ggsave("FilterTrends.png", plot = filttrendB, path = path_outputs, width = 6, height = 4, units = "in")
# config file with paths and versioning
source("AMCCOI_config.R")
# config file with paths and versioning
source("AMCCOI_config.R")
# File with previous outputs to make reloading easier
source("AMCCOI_reload.R")
View(trackB)
path_outputs
View(trackB)
outcome <- sub("_[^_]+$", "", trackB$X)
outcome
# Clean up sample names
names <- sub("_[^_]+$", "", trackB$X)
row.names(trackB) <- names
View(trackB)
# Plot filter trends
workver <- ggplot(as.data.frame(trackB)) +
geom_point(aes(row.names(trackB), input), color = "gold", size = 2.5) +
geom_point(aes(row.names(trackB), filtered), color = "yellowgreen") +
geom_point(aes(row.names(trackB), denoisedF), color = "darkgreen") +
geom_point(aes(row.names(trackB), denoisedR), color = "blue") +
geom_point(aes(row.names(trackB), merged), color = "darkblue") +
geom_point(aes(row.names(trackB), nonchim), color = "purple", size = 2.5) +
theme_bw() +
theme(axis.text.x = element_blank()) +
ggtitle("Workflow Progression for AMC BF2/BR2 Reads") + labs(x = "Sample", y = "Number of Reads")
workver
# Save plot
ggsave("WorkflowVerificationCOI.png", plot = workver, path = path_outputs, width = 6, height = 4, units = "in")
plot_bar(psCOI.stack, fill="Class") + ggtitle("Proportion of Cleaned Reads by Class.png")
psCOI
psCOI.class <- plot_bar(psCOI.stack, fill="Class") +
ggtitle("COI Identified Clean Reads") +
labs(x = "Sample", y = "ASV Proportion") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))
psCOI.class
ggsave("CleanedClassIDs.png", path = path_outputs, psCOI.class, width = 8, height = 5, units = "in")
psCOI.class <- plot_bar(psCOI.stack, fill="Class") +
ggtitle("COI Identified Clean Reads") +
labs(x = "Sample", y = "ASV Proportion") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +
theme(axis.title.x = element_blank())
psCOI.class
ggsave("CleanedClassIDs.png", path = path_outputs, psCOI.class, width = 8, height = 5, units = "in")
# Save plot
ggsave("WorkflowVerificationCOI.png", plot = workver, path = path_outputs, width = 6, height = 4, units = "in")
# Config file with paths and versioning
source("AMC12S_config.R")
# Reload file with paths to previous outputs
source("AMC12S_reload.R")
View(track12)
# Clean up sample names
names <- sub("_[^_]+$", "", track12$X)
row.names(track12) <- names
View(track12)
workver <- ggplot(as.data.frame(track12)) +
geom_point(aes(row.names(track12), input), color = "gold", size = 2.5) +
geom_point(aes(row.names(track12), filtered), color = "yellowgreen") +
geom_point(aes(row.names(track12), denoisedF), color = "darkgreen") +
geom_point(aes(row.names(track12), denoisedR), color = "blue") +
geom_point(aes(row.names(track12), merged), color = "darkblue") +
geom_point(aes(row.names(track12), nonchim), color = "purple", size = 2.5) +
theme_bw() +
theme(axis.text.x = element_blank()) +
ggtitle("Workflow Progression for AMC 12S Reads") + labs(x = "Sample", y = "Number of Reads")
workver
# Save plot
ggsave("WorkflowVerificationCOI.png", plot = workver, path = path_outputs, width = 6, height = 4, units = "in")
ps12.class <- plot_bar(ps12.stack, fill="Class") +
ggtitle("12S Identified Clean Reads") +
labs(x = "Sample", y = "ASV Proportion") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +
theme(axis.title.x = element_blank())
ps12S.stack <- transform_sample_counts(ps12S, function(x) x / sum(x) )
# Plot based on Class
ps12.class <- plot_bar(ps12.stack, fill="Class") +
ggtitle("12S Identified Clean Reads") +
labs(x = "Sample", y = "ASV Proportion") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +
theme(axis.title.x = element_blank())
ps12.class <- plot_bar(ps12S.stack, fill="Class") +
ggtitle("12S Identified Clean Reads") +
labs(x = "Sample", y = "ASV Proportion") +
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +
theme(axis.title.x = element_blank())
ps12.class
ggsave("CleanedClassIDs.png", path = path_outputs, ps12.class, width = 8, height = 5, units = "in")
library(phylosmith)
source("AMCJoint_config.R")
psCOI <- psCOI %>%
subset_taxa(Species != "Homo sapiens")
psCOI <- prune_taxa(taxa_sums(psCOI) > 0, psCOI)
psCOI <- prune_samples(sample_sums(psCOI) > 0, psCOI)
ps12 <- ps12 %>%
subset_taxa(Species != "Homo sapiens")
ps12 <- prune_taxa(taxa_sums(ps12) > 0, ps12)
ps12 <- prune_samples(sample_sums(ps12) > 0, ps12)
ggsave("AMC12S_Gamma.png", path = path_outputs, plot_bar(ps12.fam, fill="Family") + facet_grid(~Year, scales= "free_x", space = "free_x") + theme_bw() + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + labs(x = "Site", y = "Number of ASVs", title = "12S Overall Diversity")  + scale_colour_brewer(palette = "Set1") + theme(legend.position = "bottom"), width = 8, height = 7, units = "in")
ggsave("AMCCOI_Gamma.png", path = path_outputs, plot_bar(psCOI.fam, fill="Family") + facet_grid(~Year, scales= "free_x", space = "free_x") + theme_bw() + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + labs(x = "Site", y = "Number of ASVs", title = "COI Overall Diversity")  + scale_colour_brewer(palette = "Set1") + theme(legend.position = "bottom"), width = 8, height = 10, units = "in")
# Plot alpha diversity metrics
richCOIp <- plot_richness(psCOI, x = "TreatType", color = "TreatType", measures = c("Chao1", "Shannon", "Simpson")) + geom_boxplot()  + theme_bw() + labs(title = "COI Alpha Diversity Measures", x = "LWA Treatment Type") + theme(axis.title.y = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + theme(legend.position = "none") + theme(axis.text = element_text(size = 11))
richCOIp
# Plot alpha diversity metrics
richCOIp <- plot_richness(psCOI, x = "TreatType", color = "TreatType", measures = c("Chao1", "Shannon", "Simpson")) + geom_boxplot()  + theme_bw() + labs(title = "COI Alpha Diversity Measures", x = "LWA Treatment Type") + theme(axis.title.y = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + theme(legend.position = "none") #+ theme(axis.text = element_text(size = 11))
richCOIp
# Plot alpha diversity metrics
richCOIp <- plot_richness(psCOI, x = "TreatType", color = "TreatType", measures = c("Chao1", "Shannon", "Simpson")) + geom_boxplot()  + theme_bw() + labs(title = "COI Alpha Diversity Measures", x = "LWA Treatment Type") + theme(axis.title.y = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + theme(legend.position = "none") + theme(axis.text = element_text(size = 11))
rich12p <- plot_richness(ps12, x = "TreatType", color = "TreatType", measures = c("Chao1", "Shannon", "Simpson")) + geom_boxplot()  + theme_bw() + labs(title = "12S Alpha Diversity Measures", x = "LWA Treatment Type") + theme(axis.title.y = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + theme(legend.position = "none")  + theme(axis.text = element_text(size = 11))
ggsave("AMCCOI_AlphaDiversity.png", path = path_outputs, plot = richCOIp, width = 10, height = 5, units = "in")
ggsave("AMC12S_AlphaDiversity.png", path = path_outputs, plot = rich12p, width = 10, height = 5, units = "in")
# Plot alpha diversity metrics
richCOIp <- plot_richness(psCOI, x = "TreatType", color = "TreatType", measures = c("Chao1", "Shannon", "Simpson")) + geom_boxplot()  + theme_bw() + labs(title = "COI Alpha Diversity Measures", x = "LWA Treatment Type") + theme(axis.title.y = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + theme(legend.position = "none") + theme(axis.text = element_text(size = 11))
richCOIp
rich12p <- plot_richness(ps12, x = "TreatType", color = "TreatType", measures = c("Chao1", "Shannon", "Simpson")) + geom_boxplot()  + theme_bw() + labs(title = "12S Alpha Diversity Measures", x = "LWA Treatment Type") + theme(axis.title.y = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + theme(legend.position = "none")  + theme(axis.text = element_text(size = 11))
# Save plots
ggsave("AMCCOI_AlphaDiversity.png", path = path_outputs, plot = richCOIp, width = 10, height = 5, units = "in")
ggsave("AMC12S_AlphaDiversity.png", path = path_outputs, plot = rich12p, width = 10, height = 5, units = "in")
path_outputs
richCOIp <- plot_richness(psCOI, x = "TreatType", color = "TreatType", measures = c("Chao1", "Shannon", "Simpson")) + geom_boxplot()  + theme_bw() + labs(title = "COI Alpha Diversity Measures", x = "LWA Treatment Type") + theme(axis.title.y = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + theme(legend.position = "none") + theme(axis.text = element_text(size = 12))
rich12p <- plot_richness(ps12, x = "TreatType", color = "TreatType", measures = c("Chao1", "Shannon", "Simpson")) + geom_boxplot()  + theme_bw() + labs(title = "12S Alpha Diversity Measures", x = "LWA Treatment Type") + theme(axis.title.y = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) + theme(legend.position = "none")  + theme(axis.text = element_text(size = 12))
ggsave("AMCCOI_AlphaDiversity.png", path = path_outputs, plot = richCOIp, width = 10, height = 5, units = "in")
ggsave("AMC12S_AlphaDiversity.png", path = path_outputs, plot = rich12p, width = 10, height = 5, units = "in")
